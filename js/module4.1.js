// ‚ùïCALLBACK —Ñ—É–Ω–∫—Ü—ñ—ó
// ‚ùï–ó–∞–º–∏–∫–∞–Ω–Ω—è
// ‚ùï–°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
// üü©======================================================================================
// ‚ùï–§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É (callback, –∫–æ–ª–±–µ–∫)
// ‚ùï–§—É–Ω–∫—Ü—ñ—è –º–æ–∂–µ –ø—Ä–∏–π–º–∞—Ç–∏ —ñ–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
// ‚ùï–§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —ñ–Ω—à—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è —Ñ—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É
//   (callback, –∫–æ–ª–±–µ–∫)
// ‚ùï–§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –ø—Ä–∏–π–º–∞—î —É —è–∫–æ—Å—Ç—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —ñ–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –∞–±–æ –ø–æ–≤–µ—Ä—Ç–∞—î —Ñ—É–Ω–∫—Ü—ñ—é —É —è–∫–æ—Å—Ç—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
//  –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è –§—É–Ω–∫—Ü—ñ—è –≤–∏—â–æ–≥–æ –ø–æ—Ä—è–¥–∫—É (higher order function)
// üü©======================================================================================

// // ‚ùïcallback —Ü–µ –ª–∏—à–µ —ñ–º'—è –∑–º—ñ–Ω–Ω–æ—ó, –∞–ª–µ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –≤–æ–Ω–∏ –Ω–∞–∑–∏–≤–∞—é—Ç—å—Å—è —Å–∞–º–µ —Ç–∞–∫
// fnA = function (message, callback) {
//   console.log(message);
//   console.log(callback);
//   callback(100);
// };
// fnB = function (number) {
//   console.log(`–¶–µ –ª–æ–≥ –ø—Ä–∏ –≤–∏–∫–ª–∏–∫—É fnB:`,number);
// };

// fnA(`Hello`, fnB);

// üü©======================================================================================

// // ‚ùï–§—É–Ω–∫—Ü—ñ—è doMath(a,b,callback)

// const doMath = function (a, b, callback) {
//   const result = callback(a, b);

//   console.log(result);
// };
// const add = function (x, y) {
//   return x + y;
// };

// const sub = function (x, y) {
//   return x - y;
// };
// doMath(2, 3, add);
// doMath(10, 8, sub);

// // ‚ùï–Ü–Ω–ª–∞–π–Ω –∫–æ–ª–±–µ–∫–∏( –∞–Ω–æ–Ω—ñ–º–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è-—Ç–æ–º—É —â–æ –Ω–µ –º–∞—î —ñ–º–µ–Ω—ñ)
// // ‚ùï–Ø–∫—â–æ –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—è - –º–∞–ª–µ–Ω—å–∫–∞, —ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º,
// //  —ó—ó –º–æ–∂–Ω–∞ –æ–≥–æ–ª–æ—Å–∏—Ç–∏ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –Ω–∞ –º–æ–º–µ–Ω—Ç –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó, –≤ —è–∫—É –ø–µ—Ä–µ–¥–∞—î–º–æ –∫–æ–ª–±–µ–∫.

// doMath(2, 3, function (x, y) {
//   return x + y;
// });

// doMath(10, 8, function (x, y) {
//   return x - y;
// });

// üü©======================================================================================
// // ‚ùï–í—ñ–¥–∫–ª–∞–¥–µ–Ω–∏–π –≤–∏–∫–ª–∏–∫: —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø–æ–¥—ñ–π

// const buttonRef = document.querySelector(`.js-button`);

// // const handleBtnClick = function () {
// //   console.log(`–ö–ª—ñ–ø –ø–æ –∫–Ω–æ–ø—Ü—ñ ‚èπ` + Date.now());
// // };

// // buttonRef.addEventListener(`click`, handleBtnClick);

// // ‚ùï–Ü–Ω–ª–∞–π–Ω –∫–æ–ª–±–µ–∫
// buttonRef.addEventListener(`click`, function () {
//   console.log(`–ö–ª—ñ–ø –ø–æ –∫–Ω–æ–ø—Ü—ñ ‚èπ` + Date.now());
// });

// üü©======================================================================================

// // ‚ùï–í—ñ–¥–∫–ª–∞–¥–µ–Ω–∏–π –≤–∏–∫–ª–∏–∫: –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—è
// const onGetPositionSuccess = function (position) {
//   console.log(position);
// };
// const onGetPositionError = function (error) {
//   console.log(error);
// };
// window.navigator.geolocation.getCurrentPosition(
//   onGetPositionSuccess,
//   onGetPositionError
// );

// üü©======================================================================================

// // ‚ùï–í—ñ–¥–∫–ª–∞–¥–µ–Ω–∏–π –≤–∏–∫–ª–∏–∫: —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏
// const callback = function () {
//   console.log(`–ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–æ–ª–±–µ–∫–∞ –≤ —Ç–∞–π–º–∞—É—Ç—ñ`);
// };
// console.log(`–í –∫–æ–¥—ñ –ø–µ—Ä–µ–¥ —Ç–∞–π–º–∞—É—Ç–æ–º`);
// setTimeout(callback, 2000);
// console.log("–í –∫–æ–¥—ñ –ø—ñ—Å–ª—è —Ç–∞–π–º–∞—É—Ç—É");

// üü©======================================================================================

// // ‚ùï–í—ñ–¥–∫–ª–∞–¥–µ–Ω–∏–π –≤–∏–∫–ª–∏–∫: http-–≤–∏–∫–ª–∏–∫—É
// // API URL: https://pokeapi.co/api/v2/pokemon

// const onRequestSuccess = function (response) {
//   console.log(
//     `–í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó onRequestSuccess –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±–µ–∫–µ–Ω–¥–∞:`
//   );
//   console.log(response);
// };

// fetch("https://pokeapi.co/api/v2/pokemon")
//   .then((res) => res.json())
//   .then(onRequestSuccess);

// console.log(`–ø–µ—Ä–µ–¥ fetch`);
// console.log(`–ø—ñ—Å–ª—è fetch`);

// üü©======================================================================================
// ‚ùï–§—ñ–ª—å—Ç—Ä

// const filter = function (array, test) {
//   const filterArray = [];
//   for (const el of array) {
//     console.log(el);
//     // console.log(test(el));
//     const passed = test(el);

//     if (passed) {
//       filterArray.push(el);
//     }
//   }
//   return filterArray;
// };

// const callback1 = function (value) {
//   return value >= 3;
// };
// const r1 = filter([1, 2, 3, 4, 5, 6], callback1);
// console.log(r1);
// const r2 = filter([3, 4, 5, 6, 7, 8], function (value) {
//   return value <= 6;
// });
// console.log(r2);

// const fruits = [
//   { name: `üçà`, quantity: 30, isFresh: true },
//   { name: `üçé`, quantity: 40, isFresh: false },
//   { name: `ü•≠`, quantity: 50, isFresh: true },
//   { name: `üçí`, quantity: 90, isFresh: false },
// ];
// // ‚ùï–¶—è —Ñ—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è
// // const filter = function (array, test) {
// //     const filterArray = [];
// //     for (const el of array) {
// //       console.log(el);
// //       // console.log(test(el));
// //       const passed = test(el);

// //       if (passed) {
// //         filterArray.push(el);
// //       }
// //     }
// //     return filterArray;
// //   };

// getFruitsWithQuantity = function (fruit) {
//   return fruit.quantity >= 50;
// };

// const r3 = filter(fruits, getFruitsWithQuantity);
// console.log(r3);

// üü©======================================================================================
// // ‚ùï–ó–∞–º–∏–∫–∞–Ω–Ω—è
// // ‚ùï–§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –ø–æ–≤–µ—Ä—Ç—ñ—î—Ç—å—Å—è –ø—ñ–¥ —á–∞—Å –≤–∏–∫–ª–∏–∫—É –±—É–¥–µ –º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø
// // ‚ùï–¥–æ —É—Å—ñ—Ö –ª–æ–∫–∞–ª—å–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö (–æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ)
// // ‚ùï–±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó(—Ç–æ—ó –∑ —è–∫–æ—ó —ó—ó –ø–æ–≤–µ—Ä–Ω—É–ª–∏)
// // ‚ùï—Ü–µ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è "–∑–∞–º–∏–∫–∞–Ω–Ω—è"

// const fnA = function (parametr) {
//   const innerVariable = `–ó–Ω–∞—á–µ–Ω–Ω—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ—ó –∑–º—ñ–Ω–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó fnA`;

//   const innerFunction = function () {
//     console.log(parametr);
//     console.log(innerVariable);
//     console.log(`–¶–µ –≤–∏–∫–ª–∏–∫ innerFunction`);
//   };
//   return innerFunction;
// };

// const fnB = fnA(5555);
// fnB();
// console.log(fnB);

// üü©======================================================================================
// const makeDish = function (shefName, dish) {
//   console.log(`${shefName} –≥–æ—Ç—É—î ${dish}`);
// };

// makeDish(`Mango`, `–ø–∏—Ä—ñ–∂–æ–∫`);
// makeDish(`Mango`, `–æ–º–ª–µ—Ç`);
// makeDish(`Mango`, `—á–∞–π`);

// makeDish(`Poly`, `–∫–æ—Ç–ª–µ—Ç–∏`);
// makeDish(`Poly`, `—Å—É–ø—á–∏–∫`);
// makeDish(`Poly`, `–∫–∞–≤–∞`);

const makeSheff = function (name) {
  const makeDish = function (dish) {
    console.log(`${name} –≥–æ—Ç—É—î ${dish} `);
  };
  return makeDish;
};

const mango = makeSheff(`Mango`);
const poly = makeSheff(`Poly`);

mango(`–ø–∏—Ä—ñ–∂–æ–∫`);
mango(`–æ–º–ª–µ—Ç`);
mango(`—á–∞–π`);
poly(`–∫–æ—Ç–ª–µ—Ç–∏`);
poly(`—Å—É–ø—á–∏–∫`);
poly(`–∫–∞–≤—É`);
// üü©======================================================================================

// üü©======================================================================================
