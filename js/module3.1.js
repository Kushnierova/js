// const booklist = {
//   name: `–ú–æ—ó –∫–Ω–∏–∂–∫–∏`,
//   readBooks: [`–í—ñ–¥—å–º–∞–∫`, "–ì–æ–±–±—ñ—Ç", "–í–æ–ª–æ–¥–∞—Ä –ø–µ—Ä—Å–Ω—ñ–≤", "–°—ñ–ª—å–º–∞—Ä—ñ–ª—ñ–æ–Ω", "–î—é–Ω–∞"],
// };
// // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó
// booklist.unReadBooks = [`–ü—Ä–æ–∫–ª—è—Ç–∞`, "–Ü–∑ –∫—Ä–æ–≤—ñ —ñ –ø–æ–ø–µ–ª—É"];
// // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –≤–∂–µ —ñ—Å–Ω—É—é—á–æ–≥–æ
// booklist.name = `–ö–Ω–∏–∂–∫–∏ –¥–ª—è –º–µ–Ω–µ`;

// console.log(booklist);
// console.log(booklist.name);
// console.log(booklist.readBooks);

// const propertyName = `name`;
// // –î–≤–∞ –∑–∞–ø–∏—Å–∏ –∑–Ω–∏–∑—É —î —ñ–¥–µ–Ω—Ç–∏—á–Ω–∏–º–∏
// console.log(booklist[`name`]);
// console.log(booklist[propertyName]);

// // ===========================
// const username = `Mango`;
// const email = `mango@gmail.com`;

// const signupData = {
//   //   username: username,
//   //   email: email,
//   // –≤–Ω–∏–∑—É —ñ–¥–µ–Ω—Ç–∏—á–Ω–∏–π –∑–∞–ø–∏—Å(—è–∫—â–æ —ñ–º'—è –∫–ª—é—á–∞ —Ç–∞–∫–µ —Å–∞–º–µ —è–∫ —ñ–º'—è –∑–º—ñ–Ω–Ω–æ—ó)

//   username,
//   email,
// };

// console.log(signupData);
// ===================================================================
// // –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —è–∫—ñ –æ–±—á–∏—Å–ª—é—é—Ç—å—Å—è
// // <input name=`color` value=`tomato`
// const inputName = `color`;
// const inputValue = `tomato`;

// const colorPickerData = {
//   [inputName]: inputValue,
// };
// console.log(colorPickerData); //{color: 'tomato'}

// ===================================================================
// // –¢–∏–ø –ø–æ—Å–∏–ª–∞–Ω–Ω—è {}==={}
// console.log([] === []); //false
// const a = { x: 1, y: 2 };
// const b = a;
// console.log({ x: 1, y: 2 } === { x: 1, y: 2 }); //false
// console.log(b === a); //true
// ===================================================================
// –ú–∞—Å–∏–≤–∏ —ñ —Ñ—É–Ω–∫—Ü—ñ—ó —Ü–µ —Ç–µ–∂ –û–ë'–Ñ–ö–¢–ò
// Arrays
// const a = [1, 2, 3];

// a.hello = `:)`;

// console.log(a);
// // Functions

// const fn = function () {
//   console.log("hello");
// };
// fn.hello = `:)`;
// console.dir(fn.hello);

// ==========================================================================
// // –ú–µ—Ç–æ–¥–∏ –æ–±'—î–∫—Ç—É —ñ this –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –≤ –º–µ—Ç–æ–¥–∞—Ö

// const booklist = {
//   name: `–ö–Ω–∏–∂–∫–∏ –¥–ª—è –º–µ–Ω–µ`,
//   readBooks: [`–í—ñ–¥—å–º–∞–∫`, "–ì–æ–±–±—ñ—Ç", "–í–æ–ª–æ–¥–∞—Ä –ø–µ—Ä—Å–Ω—ñ–≤", "–°—ñ–ª—å–º–∞—Ä—ñ–ª—ñ–æ–Ω", "–î—é–Ω–∞"],
//   unReadBooks: [`–ü—Ä–æ–∫–ª—è—Ç–∞`, "–Ü–∑ –∫—Ä–æ–≤—ñ —ñ –ø–æ–ø–µ–ª—É"],
//   //   //   getName: function () {
//   //   //     console.log("–¢–∞–∫ —Ü–µ getName:)");
//   //   //   },
//   //   // –¶–µ —Å—Ç–∞—Ä–∞ —Ñ–æ—Ä–º–∞ –∑–∞–ø–∏—Å—É,–¥–∞–ª—ñ –Ω–æ–≤–∞ —Ñ–æ—Ä–º–∞ –ú–ï–¢–û–î–£ –û–ë'–Ñ–ö–¢–ê
//   //   getName() {
//   //     console.log("–¢–∞–∫ —Ü–µ getName:)");
//   //   },
//   changeName(newName) {
//     // console.log(`this –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ changeName:`, this);
//     this.name = newName;
//   },
//   addReadBook(newBook) {
//     this.readBooks.push(newBook);
//   },
//   addUnReadBooks(newBook) {
//     this.unReadBooks.push(newBook);
//     this.countUnReadBooks = this.unReadBooks.length;
//   },
//   getCountReadBooks() {
//     return this.readBooks.length;
//   },
//   getCountUnReadBooks() {
//     return this.unReadBooks.length;
//   },
// };

// console.log(booklist.getCountReadBooks()); //5
// // console.log(booklist);
// // booklist.getName();
// booklist.changeName(`My books`);
// // console.log(booklist);

// booklist.addReadBook(`–ë—É—Ç–∏ —á–∏ –º–∞—Ç–∏`);
// booklist.addUnReadBooks(`–î–≤–∞ –∫–∞–ø—ñ—Ç–∞–Ω–∏`);
// console.log(booklist);

// console.log(booklist.getCountReadBooks()); //6

// ========================================================================
// –ü–µ—Ä–µ–±–æ—Ä –æ–±'—î–∫—Ç–∞ –∑ –¥–æ–ø–æ–º–æ–≥–æ—é for ... in —ñ Object.keys|value|entries
const feedback = {
  good: 5,
  neutral: 10,
  bad: 3,
};
let totalFeedback = 0;
// –û—Ç—Ä–∏–º—É—î–º–æ keys
// const keys = Object.keys(feedback);

// console.log(keys);

// for (const key of keys) {
//   console.log(key);
//   //   –ü–æ—à—É–∫ value
//   console.log(feedback[key]);

//   totalFeedback += feedback[key];
// }
// console.log(`totalFeedback:`,totalFeedback);
// ========================
// –û—Ç—Ä–∏–º—É—î–º–æ value

// const values = Object.values(feedback)

// for(const value of values){
//     totalFeedback += value;
// }
// console.log(`totalFeedback:`,totalFeedback);
// // ==============================
// // –û—Ç—Ä–∏–º—É—î–º–æ –º–∞—Å–∏–≤ [–∫–ª—é—á –± –∑–Ω–∞—á–µ–Ω–Ω—è]
// const entries = Object.entries(feedback)

// for(const entrie of entries){
//     console.log(entrie)
// }

// =============================================================
const friends = [
  { name: `Monica`, online: true },
  { name: `Rachel`, online: true },
  { name: `Joey`, online: false },
  { name: `Phoebe`, online: true },
  { name: `Chandler`, online: false },
  { name: `Ross`, online: false },
];

console.table(friends);

// for (const friend of friends) {
//   console.log(friend.name);
//   friend.newprop = 555;
// }
// friends[1].newprop = 666;
// console.table(friends);

// ==============================================================
// –®—É–∫–∞—î–º–æ –¥—Ä—É–≥–∞ –ø–æ —ñ–º–µ–Ω—ñ

// const findFriendByName = function (allFriends, friendName) {
//   for (const friend of allFriends) {
//     // console.log(friend.name);
//     // console.log(friend.name === friendName);
//     if (friend.name === friendName) {
//       return `Name: "${friendName}" is in the array;`;
//     }
//   }
//   return `Name "${friendName}" is not in the array;`;
// };

// console.log(findFriendByName(friends, `Rachel`));
// console.log(findFriendByName(friends, `Robin`));

// ==========================================================
// –û—Ç—Ä–∏–º—É—î–º–æ —ñ–º–µ–Ω–∞ —É—Å—ñ—Ö –¥—Ä—É–∑—ñ–≤

// const getAllNames = function (allFriends) {
//   const names = [];
//   for (const friend of allFriends) {
//     // console.log(friend.name);
//     names.push(friend.name);
//   }
//   return names;
// };

// console.log(getAllNames(friends));

// ================================================================
// –û—Ç—Ä–∏–º—É—î–º–æ –ª–∏—à–µ —Ç–∏—Ö –¥—Ä—É–∑—ñ–≤ —è–∫—ñ –æ–Ω–ª–∞–π–Ω

// const getOnlineFriends = function (allFriends) {
//   const namesFriendsIsOnline = [];
//   for (const friend of allFriends) {
//     // if(friend.online === true){ —Ü–µ —Ç–µ–º–∞ —â–æ if (friend.online) {
//     if (friend.online) {
//       namesFriendsIsOnline.push(friend);
//     }
//   }
//   return namesFriendsIsOnline
// };

// console.log(getOnlineFriends(friends));

// ================================================================
// –û—Ç—Ä–∏–º—É—î–º–æ —ñ–º–µ–Ω–∞ –ª–∏—à–µ —Ç–∏—Ö –¥—Ä—É–∑—ñ–≤ —è–∫—ñ not –æ–Ω–ª–∞–π–Ω
// const getOfflineFriends = function (allFriends) {
//   const namesFriendsIsOffline = [];
//   for (const friend of allFriends) {
//     //if (friend.online===false) { —Ü–µ —Ç–µ —Å–∞–º–µ —â–æ if (!friend.online) {
//     if (!friend.online) {
//       namesFriendsIsOffline.push(friend.name);
//     }
//   }
//   return namesFriendsIsOffline;
// };

// console.log(getOfflineFriends(friends));
// ===============================================================
// –ü–æ–≤–µ—Ä–Ω—É—Ç–∏ –¥—Ä—É–∑—ñ–≤ —è–∫—ñ –æ–Ω–ª–∞–π–Ω —ñ —è–∫—ñ –Ω–µ –æ–Ω–ª–∞–π–Ω
// const getFriendByOnlineStatus = function (allFriends) {
//   const friendsByStatus = {
//     online: [],
//     offline: [],
//   };
//   for (const friend of allFriends) {
//     if (friend.online) {
//       friendsByStatus.online.push(friend.name);
//       continue;
//     }
//     friendsByStatus.offline.push(friend.name);
//   }
//   return friendsByStatus;
// };

// console.log(getFriendByOnlineStatus(friends));

// ==============================================================
// const x = {
//   a: 1,
//   b: 2,
//   c: 50,
//   d: 100,
// };
// console.log(Object.keys(x).length);
// =============================================================
// –ü—Ä–∞—Ü—é—î–º–æ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—ñ:
// items
// { name: `üç∑`, price: 30 }
// { name: `üçù`, price: 60 }
// { name: `üçü`, price: 40 }
// { name: `üçß`, price: 20 }
// getItems() –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–æ–¥—É–∫—Ç–∏
// add(product) –¥–æ–¥–∞—î –ø—Ä–æ–¥—É–∫—Ç–∏
// remove(productName) –≤–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç
// clear –æ—á–∏—â–∞—î –∫–æ—Ä–∑–∏–Ω—É —Ç–æ–≤–∞—Ä—ñ–≤
// countTotalPrice —Ä–∞—Ö—É—î –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É —Ç–æ–≤–∞—Ä—ñ–≤
// increaseQuantity –∑–±—ñ–ª—å—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É
// decreaseQuantity –∑–º–µ–Ω—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É

const cart = {
  items: [],
  getItems() {},
  add(product) {},
  remove(productName) {},
  clear() {},
  countTotalPrice() {},
  increaseQuantity(productName) {},
  decreaseQuantity(productName) {},
};

console.table(cart.getItems());

cart.add({ name: `üç©`, price: 40 });
cart.add({ name: `üç±`, price: 100 });
cart.add({ name: `üçï`, price: 90 });
cart.add({ name: `üçî`, price: 110 });

// console.table(cart.getItems());

cart.remove(`üç∑`);
// console.table(cart.getItems());

// cart.clear();
// console.table(cart.getItems())

// cart.increaseQuantity(`üçù`);
// console.table(cart.getItems());

// cart.decreaseQuantity(`üçü`);
// cart.decreaseQuantity(`üçü`);
// console.table(cart.getItems());

// console.log(`Total:`, cart.countTotalPrice());
